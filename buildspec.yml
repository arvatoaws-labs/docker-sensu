version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - TAG=commit-"$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - IMAGE_URI="${REPOSITORY_URI}:${TAG}"
      - echo Using NAME "$APPLICATION_NAME"
      - echo Using SENSU_COMMAND "$SENSU_COMMAND"
      - echo Using TAG "$TAG"
      - echo Using IMAGE_URI "$IMAGE_URI"
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t "${APPLICATION_NAME}:latest" --no-cache .
      - docker tag "${APPLICATION_NAME}:latest" "${REPOSITORY_URI}:latest"
      - docker tag "${APPLICATION_NAME}:latest" "${REPOSITORY_URI}:${TAG}"
      - echo Build completed on `date`
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push "${REPOSITORY_URI}:latest"
      - docker push "${REPOSITORY_URI}:${TAG}"
      - echo Preparing Cloudformation Artifacts
      - printf '[{"name":"%s","imageUri":"%s"}]' "$APPLICATION_NAME" "$IMAGE_URI" > images.json
      - cat images.json
      - printf '{"Parameters":{"ContainerImage":"%s","ContainerName":"%s","SensuCommand":"%s"}}' "$IMAGE_URI" "$APPLICATION_NAME" "$SENSU_COMMAND"> stack-configuration.json
      - cat stack-configuration.json
      - sed "s|SSM_BASE_PATH|$SSM_BASE_PATH_DEV|g" cloudformation.json > cloudformation_dev.json
      - cat cloudformation_dev.json
      - sed "s|SSM_BASE_PATH|$SSM_BASE_PATH_PREPROD|g" cloudformation.json > cloudformation_preprod.json
      - cat cloudformation_preprod.json
      - sed "s|SSM_BASE_PATH|$SSM_BASE_PATH_PROD|g" cloudformation.json > cloudformation_prod.json
      - cat cloudformation_prod.json

artifacts:
  files:
    - images.json
    - stack-configuration.json
    - cloudformation.json
    - cloudformation_dev.json
    - cloudformation_preprod.json
    - cloudformation_prod.json
